//#include "src/lib/nanopb/pb.h"

syntax = "proto2";

import "nanopb.proto";

package xen;

message ConfigWrapper {
    optional ChannelConfig channelConfig = 1;
    optional Scale scale = 2;
    optional int32 triggerTime = 3;
    optional ControllerConfig controllerConfig = 4;
    optional PercussionChannelConfig percussionChannelConfig = 5;
}


message ChannelConfig {
    repeated ChannelMapping channelMapping = 1 [(nanopb).max_count = 16];
}

message ChannelMapping {
    required int32 midiChannel = 1   [(nanopb).int_size = IS_8];
    required int32 cvChannelFrom = 2 [(nanopb).int_size = IS_8];
    required int32 cvChannelTo = 3   [(nanopb).int_size = IS_8];
}


message ControllerConfig {
    repeated ControllerMapping controllerMapping = 1 [(nanopb).max_count = 32];
}

message ControllerMapping {
    required int32 midiChannel = 1    [(nanopb).int_size = IS_8];
    required int32 midiController = 2 [(nanopb).int_size = IS_8];
    required int32 cvChannel = 4      [(nanopb).int_size = IS_8];
    required int32 cvBank = 5         [(nanopb).int_size = IS_8];
}


message PercussionChannelConfig {
    required int32 midiChannel = 1                   [(nanopb).int_size = IS_8];
    repeated PercussionMapping percussionMapping = 2 [(nanopb).max_count = 64];
}


message PercussionMapping {
    required int32 midiNote = 1      [(nanopb).int_size = IS_8];
    required int32 cvChannel = 2     [(nanopb).int_size = IS_8];
    required float control1Value = 3;
    required float control2Value = 4;
}


message Scale {
    repeated int32 cents = 1 [(nanopb).max_count = 48];
}
